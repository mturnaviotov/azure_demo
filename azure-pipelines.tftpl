trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  name: "${name}"
  azureSubsription: '${subscription}'
  # ACR service connection 
  dockerRegistryServiceConnection: '${cr_id}'
  containerRegistry: "${registry_uri}"
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'
  agent_pool: '${agent_pool}'
  # Agent VM image name for Azure pipelines
  # vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build and Push Image
    pool: $(agent_pool)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(name)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
- stage: Deploy
  displayName: Deploy
  jobs:
  - job: Deploy
    displayName: Deploy Image to Web Service
    pool: $(agent_pool)
    steps:
    # Second option to deploy 
    # - task: AzureWebAppContainer@1
    #   displayName: 'Azure Web App on Container Deploy'
    #   inputs:
    #     azureSubscription: $(azureSubsription)
    #     appName: $(name)
    #     containers: $(containerRegistry)/$(imageRepository):$(tag)
    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: $(azureSubsription)
        appType: 'webAppContainer'
        WebAppName: $(name)
        DockerNamespace: $(containerRegistry)
        DockerRepository: $(name)
        DockerImageTag: '$(tag)'